name: Deploy Packing Analyzer

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout kod źródłowy
        uses: actions/checkout@v3
      
      - name: Konfiguracja Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Instalacja zależności
        run: npm ci
      
      - name: Budowa aplikacji
        run: npm run build
        env:
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
      
      - name: Instalacja Firebase CLI
        run: npm install -g firebase-tools

      - name: Wdrożenie reguł Firestore
        run: firebase deploy --only firestore:rules --token ${{ secrets.FIREBASE_TOKEN }}
        
      - name: Wdrożenie na Firebase Hosting
        run: firebase deploy --only hosting --token ${{ secrets.FIREBASE_TOKEN }}
        
      - name: Powiadomienie o zakończeniu wdrożenia
        if: success()
        run: |
          echo "Wdrożenie zakończone sukcesem!"
          # Tu można dodać integrację z Slack/Discord/Email 