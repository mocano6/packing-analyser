{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\nimport type { NextRequest } from 'next/server'\n\nexport function middleware(request: NextRequest) {\n  console.log('AUTH_USERNAME:', process.env.NEXT_PUBLIC_AUTH_USERNAME)\n  console.log('AUTH_PASSWORD:', process.env.NEXT_PUBLIC_AUTH_PASSWORD)\n  \n  const basicAuth = request.headers.get('authorization')\n\n  if (basicAuth) {\n    const authValue = basicAuth.split(' ')[1]\n    const [user, pwd] = atob(authValue).split(':')\n\n    console.log('Provided credentials:', { user, pwd })\n\n    if (user === process.env.NEXT_PUBLIC_AUTH_USERNAME && pwd === process.env.NEXT_PUBLIC_AUTH_PASSWORD) {\n      return NextResponse.next()\n    }\n  }\n\n  return new NextResponse('Authentication Required', {\n    status: 401,\n    headers: {\n      'WWW-Authenticate': 'Basic realm=\"Secure Area\"',\n    },\n  })\n}\n\nexport const config = {\n  matcher: [\n    /*\n     * Match all request paths except for the ones starting with:\n     * - api (API routes)\n     * - _next/static (static files)\n     * - _next/image (image optimization files)\n     * - favicon.ico (favicon file)\n     */\n    '/((?!api|_next/static|_next/image|favicon.ico).*)',\n  ],\n} "],"names":[],"mappings":";;;;AAAA;AAAA;;AAGO,SAAS,WAAW,OAAoB;IAC7C,QAAQ,GAAG,CAAC;IACZ,QAAQ,GAAG,CAAC;IAEZ,MAAM,YAAY,QAAQ,OAAO,CAAC,GAAG,CAAC;IAEtC,IAAI,WAAW;QACb,MAAM,YAAY,UAAU,KAAK,CAAC,IAAI,CAAC,EAAE;QACzC,MAAM,CAAC,MAAM,IAAI,GAAG,KAAK,WAAW,KAAK,CAAC;QAE1C,QAAQ,GAAG,CAAC,yBAAyB;YAAE;YAAM;QAAI;QAEjD,IAAI,sDAAkD,6DAA+C;YACnG,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;QAC1B;IACF;IAEA,OAAO,IAAI,6LAAA,CAAA,eAAY,CAAC,2BAA2B;QACjD,QAAQ;QACR,SAAS;YACP,oBAAoB;QACtB;IACF;AACF;AAEO,MAAM,SAAS;IACpB,SAAS;QACP;;;;;;KAMC,GACD;KACD;AACH"}}]
}